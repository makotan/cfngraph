{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "CloudFormation template file.",
  "Parameters" : {
    "HostedZone" : {
      "Description" : "The DNS name of an existing Amazon Route 53 hosted zone",
      "Default" : "miyamoto.classmethod.info",
      "Type" : "String"
    },
    "VpcId" : {
      "Description" : "VpcId of your existing Virtual Private Cloud (VPC)",
      "Type" : "String",
      "Default" : "vpc-5524fd3d"
    },
    "VpcCidrBlock" : {
      "Description" : "CIDR block of your Virtual Private Cloud (VPC)",
      "Type" : "String",
      "Default" : "172.31.0.0/16",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x."
    },
    "PrimarySubnetId" : {
      "Description" : "Primary subnet ID in your Virtual Private Cloud (VPC)",
      "Type" : "String",
      "Default" : "subnet-5724fd3f"
    },
    "SecondarySubnetId" : {
      "Description" : "Secondary subnet ID in your Virtual Private Cloud (VPC)",
      "Type" : "String",
      "Default" : "subnet-5624fd3e"
    },
    "PrimarySeedNodeIpAddress" : {
      "Description" : "The IP address of seed node in primary subnet.",
      "Type" : "String",
      "Default" : "172.31.0.10",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
      "ConstraintDescription": "must be a valid IP address of the form x.x.x.x."
    },
    "SecondarySeedNodeIpAddress" : {
      "Description" : "The IP address of seed node in secondary subnet.",
      "Type" : "String",
      "Default" : "172.31.16.10",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
      "ConstraintDescription": "must be a valid IP address of the form x.x.x.x."
    },
    "PrimaryAvailabilityZone" : {
      "Description" : "AZ of Primary subnet",
      "Type" : "String",
      "Default" : "ap-northeast-1a"
    },
    "SecondaryAvailabilityZone" : {
      "Description" : "AZ of Secondary subnet",
      "Type" : "String",
      "Default" : "ap-northeast-1c"
    },
    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "String",
      "MinLength" : "1",
      "MaxLength" : "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "Default" : "miyamoto-kp1",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    },
    "InstanceType": {
      "Default": "t1.micro",
      "Description": "EC2 instance type",
      "Type": "String",
      "AllowedValues": [
        "t1.micro", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge",
        "m2.4xlarge", "c1.medium", "c1.xlarge", "cc1.4xlarge", "cc2.8xlarge", "cg1.4xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "MaintenanceFrom": {
      "Description": "Lockdown SSH access to the bastion host (default can be accessed from anywhere)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x."
    },
    "FleetSize" : {
      "Description" : "Number of EC2 instances to launch for the Cassandra server",
      "Default" : "2",
      "Type" : "Number",
      "MaxValue" : "10",
      "MinValue" : "0"
    },
    "ClusterName" : {
      "Description" : "The name of this Cassandra cluster",
      "Default" : "Demo Cluster",
      "Type" : "String"
    }
  },
  "Mappings" : {
    "AWSAmazonLinuxAMI": {
      "us-east-1":      { "name":"Virginia",   "201303": "ami-3275ee5b", "201309": "ami-35792c5c" },
      "us-west-2":      { "name":"Oregon",     "201303": "ami-ecbe2adc", "201309": "ami-d03ea1e0" },
      "us-west-1":      { "name":"California", "201303": "ami-66d1fc23", "201309": "ami-687b4f2d" },
      "eu-west-1":      { "name":"Ireland",    "201303": "ami-44939930", "201309": "ami-149f7863" },
      "ap-southeast-1": { "name":"Singapole",  "201303": "ami-aa9ed2f8", "201309": "ami-14f2b946" },
      "ap-southeast-2": { "name":"Sydney",     "201303": "ami-363eaf0c", "201309": "ami-a148d59b" },
      "ap-northeast-1": { "name":"Tokyo",      "201303": "ami-173fbf16", "201309": "ami-3561fe34" },
      "sa-east-1":      { "name":"SaoPaulo",   "201303": "ami-dd6bb0c0", "201309": "ami-9f6ec982" }
    },
    "StackConfig" : {
      "Postfix"               : { "Version" : "2.6.6" },
      "PostfixAdmin"          : { "Version" : "2.3.6" }
    }
  },
  "Resources" : {
    "CassandraRole" : {
      "Type" : "AWS::IAM::Role",
      "Properties" : {
        "AssumeRolePolicyDocument" : {
          "Statement": [ {
            "Effect": "Allow",
              "Principal": {
                "Service": [ "ec2.amazonaws.com" ]
              },
              "Action": [ "sts:AssumeRole" ]
          } ]
        },
        "Path" : "/",
        "Policies" :[ {
          "PolicyName" : "PowerUserPolicy",
          "PolicyDocument" : {
            "Statement": [ {
              "Sid": "PowerUserStmt",
              "Effect": "Allow",
              "NotAction": "iam:*",
              "Resource": "*"
            } ]
          }
        }]
      }
    },
    "CassandraProfile" : {
      "Type" : "AWS::IAM::InstanceProfile",
      "Properties" : {
        "Roles" : [ { "Ref" : "CassandraRole" } ]
      }
    },
    "VPCDefaultSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcId" },
        "GroupDescription" : "Allow all communications in VPC",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "0", "ToPort" : "65535", "CidrIp" : { "Ref" : "VpcCidrBlock" } },
          { "IpProtocol" : "udp", "FromPort" : "0", "ToPort" : "65535", "CidrIp" : { "Ref" : "VpcCidrBlock" } },
          { "IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "CidrIp" : { "Ref" : "VpcCidrBlock" } }
        ]
      }
    },
    "CassandraSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcId" },
        "GroupDescription" : "Enable SSH access from maintenance CIDR.",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "MaintenanceFrom" } }
        ]
      }
    },

    "PrimarySeedNodeInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType": { "Ref" : "InstanceType" },
        "KeyName": { "Ref" : "KeyName" },
        "ImageId": { "Fn::FindInMap" : [ "AWSAmazonLinuxAMI", { "Ref" : "AWS::Region" }, "201309" ]},
        "SubnetId" : { "Ref" : "PrimarySubnetId" },
        "PrivateIpAddress" : { "Ref" : "PrimarySeedNodeIpAddress" },
        "SecurityGroupIds": [
          { "Ref" : "CassandraSecurityGroup" },
          { "Ref" : "VPCDefaultSecurityGroup" }
        ],
        "IamInstanceProfile": { "Ref" : "CassandraProfile" },
        "Tags" : [
          { "Key" : "Name", "Value" : "Cassandra-Seed" }
        ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#! /bin/bash -v\n",
          "yum update -y\n",

          "# Helper function\n",
          "function error_exit\n",
          "{\n",
          "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '", { "Ref" : "CassandraPrimarySeedWaitHandle" }, "'\n",
          "  exit 1\n",
          "}\n",

          "# Install packages\n",
          "/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackId" }, " -r PrimarySeedNodeInstance ",
          "    --region ", { "Ref" : "AWS::Region" }, "\n",

          "# All is well so signal success\n",
          "/opt/aws/bin/cfn-signal -e $? -r \"PrimarySeedNodeInstance setup complete\" '", { "Ref" : "CassandraPrimarySeedWaitHandle" }, "'\n"
        ]]}}
      },
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "configSets" : {
            "default" : [
              "configure_hosts",
              "install_java7",
              "install_repo",
              "install_cassandra"
            ]
          },
          "configure_hosts" : {
            "commands" : {
              "01-create_hosts_entry-on_boot" : {
                "command" : "echo \"`curl -s curl http://169.254.169.254/latest/meta-data/local-ipv4` `hostname`\" >>/etc/hosts",
                "test" : "test ! -f .create_hosts_entry-semaphore"
              },
              "02-signal_startup_complete" : {
                "command" : "touch .create_hosts_entry-semaphore"
              }
            }
          },
          "install_java7" : {
            "packages" : {
              "yum" : {
                "java-1.7.0-openjdk-devel" : []
              }
            },
            "commands" : {
              "use_java7" : {
                "command" : "alternatives --set java /usr/lib/jvm/jre-1.7.0-openjdk.x86_64/bin/java"
              }
            }
          },
          "install_repo" : {
            "files" : {
              "/etc/yum.repos.d/datastax.repo" : {
                "content" : { "Fn::Join" : ["\n", [
                  "[datastax]",
                  "name = DataStax Repo for Apache Cassandra",
                  "baseurl = http://rpm.datastax.com/community",
                  "enabled = 1",
                  "gpgcheck = 0"
                ]]},
                "mode"    : "000644",
                "owner"   : "root",
                "group"   : "root"
              }
            }
          },
          "install_cassandra" : {
            "packages" : {
              "yum" : {
                "dsc20" : []
              }
            },
            "files" : {
              "/etc/cassandra/default.conf/cassandra.yaml" : {
                "content" : { "Fn::Join" : ["", [
                  "cluster_name: '", { "Ref" : "ClusterName" }, "'\n",
                  "num_tokens: 256\n",
                  "hinted_handoff_enabled: true\n",
                  "max_hint_window_in_ms: 10800000\n",
                  "hinted_handoff_throttle_in_kb: 1024\n",
                  "max_hints_delivery_threads: 2\n",
                  "authenticator: AllowAllAuthenticator\n",
                  "authorizer: AllowAllAuthorizer\n",
                  "permissions_validity_in_ms: 2000\n",
                  "partitioner: org.apache.cassandra.dht.Murmur3Partitioner\n",
                  "data_file_directories:\n",
                  "    - /var/lib/cassandra/data\n",
                  "commitlog_directory: /var/lib/cassandra/commitlog\n",
                  "disk_failure_policy: stop\n",
                  "key_cache_size_in_mb:\n",
                  "key_cache_save_period: 14400\n",
                  "row_cache_size_in_mb: 0\n",
                  "row_cache_save_period: 0\n",
                  "saved_caches_directory: /var/lib/cassandra/saved_caches\n",
                  "commitlog_sync: periodic\n",
                  "commitlog_sync_period_in_ms: 10000\n",
                  "commitlog_segment_size_in_mb: 32\n",
                  "seed_provider:\n",
                  "    - class_name: org.apache.cassandra.locator.SimpleSeedProvider\n",
                  "      parameters:\n",
                  "          - seeds: \"", { "Ref" : "PrimarySeedNodeIpAddress" }, ",", { "Ref" : "SecondarySeedNodeIpAddress" }, "\"\n",
                  "concurrent_reads: 32\n",
                  "concurrent_writes: 32\n",
                  "memtable_flush_queue_size: 4\n",
                  "trickle_fsync: false\n",
                  "trickle_fsync_interval_in_kb: 10240\n",
                  "storage_port: 7000\n",
                  "ssl_storage_port: 7001\n",
                  "listen_address: ", { "Ref" : "PrimarySeedNodeIpAddress" }, "\n",
                  "start_native_transport: true\n",
                  "native_transport_port: 9042\n",
                  "start_rpc: true\n",
                  "rpc_address: 0.0.0.0\n",
                  "rpc_port: 9160\n",
                  "rpc_keepalive: true\n",
                  "rpc_server_type: sync\n",
                  "thrift_framed_transport_size_in_mb: 15\n",
                  "incremental_backups: false\n",
                  "snapshot_before_compaction: false\n",
                  "auto_snapshot: true\n",
                  "tombstone_warn_threshold: 1000\n",
                  "tombstone_failure_threshold: 100000\n",
                  "column_index_size_in_kb: 64\n",
                  "in_memory_compaction_limit_in_mb: 64\n",
                  "multithreaded_compaction: false\n",
                  "compaction_throughput_mb_per_sec: 16\n",
                  "compaction_preheat_key_cache: true\n",
                  "read_request_timeout_in_ms: 5000\n",
                  "range_request_timeout_in_ms: 10000\n",
                  "write_request_timeout_in_ms: 2000\n",
                  "cas_contention_timeout_in_ms: 1000\n",
                  "truncate_request_timeout_in_ms: 60000\n",
                  "request_timeout_in_ms: 10000\n",
                  "cross_node_timeout: false\n",
                  "endpoint_snitch: Ec2Snitch\n",
                  "dynamic_snitch_update_interval_in_ms: 100\n",
                  "dynamic_snitch_reset_interval_in_ms: 600000\n",
                  "dynamic_snitch_badness_threshold: 0.1\n",
                  "request_scheduler: org.apache.cassandra.scheduler.NoScheduler\n",
                  "server_encryption_options:\n",
                  "    internode_encryption: none\n",
                  "    keystore: conf/.keystore\n",
                  "    keystore_password: cassandra\n",
                  "    truststore: conf/.truststore\n",
                  "    truststore_password: cassandra\n",
                  "client_encryption_options:\n",
                  "    enabled: false\n",
                  "    keystore: conf/.keystore\n",
                  "    keystore_password: cassandra\n",
                  "internode_compression: all\n",
                  "inter_dc_tcp_nodelay: false\n",
                  "preheat_kernel_page_cache: false\n"
                ]]},
                "mode"    : "000644",
                "owner"   : "cassandra",
                "group"   : "cassandra"
              }
            },
            "services" : {
              "sysvinit" : {
                "cassandra"  : { "enabled" : "true", "ensureRunning" : "true" }
              }
            }
          }
        }
      }
    },
    "CassandraPrimarySeedWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },
    "CassandraPrimarySeedWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "PrimarySeedNodeInstance",
      "Properties" : {
        "Handle" : {"Ref" : "CassandraPrimarySeedWaitHandle"},
        "Timeout" : "3600"
      }
    },



    "CassandraNonSeedFleet" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy" : {
        "AutoScalingRollingUpdate" : {
          "MaxBatchSize" : "1",
          "MinInstancesInService" : "1",
          "PauseTime" : "PT2M30S"
        }
      },
      "Properties" : {
        "AvailabilityZones" : [
          { "Ref" : "PrimaryAvailabilityZone" },
          { "Ref" : "SecondaryAvailabilityZone" }
        ],
        "VPCZoneIdentifier" : [
          { "Ref" : "PrimarySubnetId" },
          { "Ref" : "SecondarySubnetId" }
        ],
        "LaunchConfigurationName" : { "Ref" : "CassandraNonSeedLaunchConfig"  },
        "MinSize" : { "Ref" : "FleetSize" },
        "MaxSize" : { "Ref" : "FleetSize" },
        "DesiredCapacity" : { "Ref" : "FleetSize" },
        "Tags" : [
          { "Key" : "Name", "Value" : "Cassandra", "PropagateAtLaunch" : "true" }
        ]
      }
    },
    "CassandraNonSeedLaunchConfig"  : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Properties" : {
        "InstanceType": { "Ref" : "InstanceType" },
        "KeyName": { "Ref" : "KeyName" },
        "ImageId": { "Fn::FindInMap" : [ "AWSAmazonLinuxAMI", { "Ref" : "AWS::Region" }, "201309" ]},
        "SecurityGroups": [
          { "Ref" : "CassandraSecurityGroup" },
          { "Ref" : "VPCDefaultSecurityGroup" }
        ],
        "IamInstanceProfile": { "Ref" : "CassandraProfile" },
        "InstanceMonitoring" : "false",
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#! /bin/bash -v\n",
          "yum update -y\n",

          "# Helper function\n",
          "function error_exit\n",
          "{\n",
          "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '", { "Ref" : "CassandraNonSeedWaitHandle" }, "'\n",
          "  exit 1\n",
          "}\n",

          "# Install packages\n",
          "/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackId" }, " -r CassandraNonSeedLaunchConfig ",
          "    --region ", { "Ref" : "AWS::Region" }, "\n",

          "# All is well so signal success\n",
          "/opt/aws/bin/cfn-signal -e $? -r \"Cassandra instance setup complete\" '", { "Ref" : "CassandraNonSeedWaitHandle" }, "'\n"
        ]]}}
      },
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "configSets" : {
            "default" : [
              "configure_hosts",
              "install_java7",
              "install_repo",
              "install_cassandra"
            ]
          },
          "configure_hosts" : {
            "commands" : {
              "01-create_hosts_entry-on_boot" : {
                "command" : "echo \"`curl -s curl http://169.254.169.254/latest/meta-data/local-ipv4` `hostname`\" >>/etc/hosts",
                "test" : "test ! -f .create_hosts_entry-semaphore"
              },
              "02-signal_startup_complete" : {
                "command" : "touch .create_hosts_entry-semaphore"
              }
            }
          },
          "install_java7" : {
            "packages" : {
              "yum" : {
                "java-1.7.0-openjdk-devel" : []
              }
            },
            "commands" : {
              "use_java7" : {
                "command" : "alternatives --set java /usr/lib/jvm/jre-1.7.0-openjdk.x86_64/bin/java"
              }
            }
          },
          "install_repo" : {
            "files" : {
              "/etc/yum.repos.d/datastax.repo" : {
                "content" : { "Fn::Join" : ["\n", [
                  "[datastax]",
                  "name = DataStax Repo for Apache Cassandra",
                  "baseurl = http://rpm.datastax.com/community",
                  "enabled = 1",
                  "gpgcheck = 0"
                ]]},
                "mode"    : "000644",
                "owner"   : "root",
                "group"   : "root"
              }
            }
          },
          "install_cassandra" : {
            "packages" : {
              "yum" : {
                "dsc20" : []
              }
            },
            "files" : {
              "/etc/cassandra/default.conf/cassandra.yaml" : {
                "content" : { "Fn::Join" : ["", [
                  "cluster_name: '", { "Ref" : "ClusterName" }, "'\n",
                  "num_tokens: 256\n",
                  "hinted_handoff_enabled: true\n",
                  "max_hint_window_in_ms: 10800000\n",
                  "hinted_handoff_throttle_in_kb: 1024\n",
                  "max_hints_delivery_threads: 2\n",
                  "authenticator: AllowAllAuthenticator\n",
                  "authorizer: AllowAllAuthorizer\n",
                  "permissions_validity_in_ms: 2000\n",
                  "partitioner: org.apache.cassandra.dht.Murmur3Partitioner\n",
                  "data_file_directories:\n",
                  "    - /var/lib/cassandra/data\n",
                  "commitlog_directory: /var/lib/cassandra/commitlog\n",
                  "disk_failure_policy: stop\n",
                  "key_cache_size_in_mb:\n",
                  "key_cache_save_period: 14400\n",
                  "row_cache_size_in_mb: 0\n",
                  "row_cache_save_period: 0\n",
                  "saved_caches_directory: /var/lib/cassandra/saved_caches\n",
                  "commitlog_sync: periodic\n",
                  "commitlog_sync_period_in_ms: 10000\n",
                  "commitlog_segment_size_in_mb: 32\n",
                  "seed_provider:\n",
                  "    - class_name: org.apache.cassandra.locator.SimpleSeedProvider\n",
                  "      parameters:\n",
                  "          - seeds: \"", { "Ref" : "PrimarySeedNodeIpAddress" }, ",", { "Ref" : "SecondarySeedNodeIpAddress" }, "\"\n",
                  "concurrent_reads: 32\n",
                  "concurrent_writes: 32\n",
                  "memtable_flush_queue_size: 4\n",
                  "trickle_fsync: false\n",
                  "trickle_fsync_interval_in_kb: 10240\n",
                  "storage_port: 7000\n",
                  "ssl_storage_port: 7001\n",
                  "listen_address: #LISTEN_ADDRESS#\n",
                  "start_native_transport: true\n",
                  "native_transport_port: 9042\n",
                  "start_rpc: true\n",
                  "rpc_address: 0.0.0.0\n",
                  "rpc_port: 9160\n",
                  "rpc_keepalive: true\n",
                  "rpc_server_type: sync\n",
                  "thrift_framed_transport_size_in_mb: 15\n",
                  "incremental_backups: false\n",
                  "snapshot_before_compaction: false\n",
                  "auto_snapshot: true\n",
                  "tombstone_warn_threshold: 1000\n",
                  "tombstone_failure_threshold: 100000\n",
                  "column_index_size_in_kb: 64\n",
                  "in_memory_compaction_limit_in_mb: 64\n",
                  "multithreaded_compaction: false\n",
                  "compaction_throughput_mb_per_sec: 16\n",
                  "compaction_preheat_key_cache: true\n",
                  "read_request_timeout_in_ms: 5000\n",
                  "range_request_timeout_in_ms: 10000\n",
                  "write_request_timeout_in_ms: 2000\n",
                  "cas_contention_timeout_in_ms: 1000\n",
                  "truncate_request_timeout_in_ms: 60000\n",
                  "request_timeout_in_ms: 10000\n",
                  "cross_node_timeout: false\n",
                  "endpoint_snitch: Ec2Snitch\n",
                  "dynamic_snitch_update_interval_in_ms: 100\n",
                  "dynamic_snitch_reset_interval_in_ms: 600000\n",
                  "dynamic_snitch_badness_threshold: 0.1\n",
                  "request_scheduler: org.apache.cassandra.scheduler.NoScheduler\n",
                  "server_encryption_options:\n",
                  "    internode_encryption: none\n",
                  "    keystore: conf/.keystore\n",
                  "    keystore_password: cassandra\n",
                  "    truststore: conf/.truststore\n",
                  "    truststore_password: cassandra\n",
                  "client_encryption_options:\n",
                  "    enabled: false\n",
                  "    keystore: conf/.keystore\n",
                  "    keystore_password: cassandra\n",
                  "internode_compression: all\n",
                  "inter_dc_tcp_nodelay: false\n",
                  "preheat_kernel_page_cache: false\n"
                ]]},
                "mode"    : "000644",
                "owner"   : "cassandra",
                "group"   : "cassandra"
              }
            },
            "commands" : {
              "set_listen_address" : {
                "command" : "sed -i -e \"s/#LISTEN_ADDRESS#/$(curl -s curl http://169.254.169.254/latest/meta-data/local-ipv4)/\" /etc/cassandra/default.conf/cassandra.yaml "
              }
            },
            "services" : {
              "sysvinit" : {
                "cassandra"  : { "enabled" : "true", "ensureRunning" : "true" }
              }
            }
          }
        }
      }
    },
    "CassandraNonSeedWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },
    "CassandraNonSeedWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "CassandraNonSeedFleet",
      "Properties" : {
        "Handle" : {"Ref" : "CassandraNonSeedWaitHandle"},
        "Timeout" : "3600",
        "Count"   : { "Ref" : "FleetSize" }
      }
    }
  }
}